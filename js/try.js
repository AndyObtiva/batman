// Generated by CoffeeScript 1.3.3
(function() {
  var cm,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $('<script src="lib/dist/batman.jquery.js"></script>').appendTo('head');

  $('<script src="js/codemirror.js"></script>').appendTo('head');

  $('<script src="js/modes/javascript.js"></script>').appendTo('head');

  $('<link rel="stylesheet" href="css/codemirror.css" />').appendTo('head');

  cm = CodeMirror($('.code-editor-text').html('')[0], {
    value: "var foo = 'bar'\nfoo += 'baz'",
    mode: "javascript"
  });

  window.Try = (function(_super) {

    __extends(Try, _super);

    function Try() {
      return Try.__super__.constructor.apply(this, arguments);
    }

    Try.dispatcher = false;

    Try.navigator = false;

    Try.layout = 'layout';

    return Try;

  })(Batman.App);

  Try.LayoutView = (function(_super) {

    __extends(LayoutView, _super);

    function LayoutView(options) {
      options.node = $('.intro')[0];
      LayoutView.__super__.constructor.apply(this, arguments);
    }

    return LayoutView;

  })(Batman.View);

  Try.set('currentFile', Batman({
    name: "test"
  }));

  Try.run();

}).call(this);
